CC = gcc

INCLUDES = -I../common/
CFLAGS = $(INCLUDES) -fPIC -fpatchable-function-entry=16,14 -g3
LDFLAGS= -ldl -lpthread -lrt

all: test libc_livepatch1.so

test: test.c
	$(CC) $(CFLAGS) -o $@ $< $(LDFLAGS)

%.so: %.o %.dsc
	$(CC) $(CFLAGS) -shared -o $@ $< $(LDFLAGS)
	ulp packer $(word 2,$^)

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $^

.PHONY: clean check
clean:
	rm -rf test *.o *.so *.swp

.ONESHELL:
check: test libc_livepatch1.so
	@LIBPULP_PATH=/usr/local/lib64/libpulp.so; \
	if [ ! -f "$${LIBPULP_PATH}" ]; then \
		LIBPULP_PATH=/usr/lib64/libpulp.so; \
	fi; \
	if [ ! -f "$${LIBPULP_PATH}" ]; then \
		LIBPULP_PATH=/lib64/libpulp.so; \
	fi; \
	if [ ! -f "$${LIBPULP_PATH}" ]; then \
		echo "ERROR: libpulp not found"; \
		exit 1; \
	fi; \
	\
	LD_PRELOAD=$${LIBPULP_PATH} ./test > /dev/null &
	pid=$$! ; \
	sleep 0.1; \
	if [ -f libc_livepatch1.so ]; then \
		ulp trigger -q -p $${pid} libc_livepatch1.so
		if [ $$? -ne 0 ]; then \
			echo "ERROR: Test failure"; \
		fi; \
	fi; \
	if [ -f libpthread_livepatch1.so ]; then \
		ulp trigger -q -p $${pid} libpthread_livepatch1.so
		if [ $$? -ne 0 ]; then \
			echo "ERROR: Test failure"; \
		fi; \
	fi; \
	if [ -f librt_livepatch1.so ]; then \
		ulp trigger -q -p $${pid} librt_livepatch1.so
		if [ $$? -ne 0 ]; then \
			echo "ERROR: Test failure"; \
		fi; \
	fi; \
	kill -s 10 $${pid}; \
	wait $${pid}; \
	if [ $$? -ne 0 ]; then \
		echo "FAIL: $(NAME)"; \
		exit 1; \
	fi; \
	echo "SUCCESS: $(NAME)";

